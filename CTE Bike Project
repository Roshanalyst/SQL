/* Let's say you work as a data analyst for your city, and your boss wants a list of all the bike lanes that have an average safety rating of 4.0 or higher.
 She also wants to see the average safety rating for each of those bike lanes, and a label that says "Safe Lane". */
 
WITH avgSafetyRating AS (
SELECT street,
AVG(safetyrating) AS avg_safetyrating
FROM CityBikeLanes
GROUP BY street
)
SELECT street,
avg_safetyrating, 
CASE
    WHEN avg_safetyrating >= 4.0 THEN 'Safe Lane'
    END AS safe_scale
FROM avgSafetyRating
WHERE avg_safetyrating >= 4.0;



/*A list of all the bike lanes, both safety ratings for each lane, the average safety rating for each lane, and a label with the recommendation as "Remove", "Leave As-Is", or "Improvements Needed". 
- bike lanes with an average safety rating of 4 or more should be labeled "Leave As-Is"
- bike lanes with an average safety rating of less than 2.5 should be labeled as "Remove"
- all other bike lanes should be labeled as "Improvements Needed" */

SELECT street, safetyrating, 
AVG(safetyrating) OVER (PARTITION BY street) AS Average_safety_rating,
CASE
    WHEN AVG(safetyrating) OVER (PARTITION BY street) >= 4 THEN 'Leave As-Is'
    WHEN AVG(safetyrating) OVER (PARTITION BY street) < 2.5 THEN 'Remove' 
    ELSE 'Improvements Needed'
    END AS Label  
FROM CityBikeLanes;
